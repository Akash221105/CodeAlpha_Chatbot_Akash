import spacy
import tkinter as tk
from tkinter import messagebox

# Load the English language model
nlp = spacy.load("en_core_web_sm")

# Define a dictionary of responses
responses = {
    "hello": "Hi! How can I help you today?",
    "hi": "Hello! What's on your mind?",
    "how are you": "I'm doing well, thanks! How about you?",
    "what is your name": "I'm ChatBot, nice to meet you!",
    "how's the day today": "It seems to be a lovely day today!",
    "goodbye": "See you later! Have a great day!",
    "bye": "See you later! Have a great day!",
    "thanks": "You're welcome!",
    "thank you": "You're welcome!",
}

class ChatBotGUI:
    def __init__(self, master):
        self.master = master
        master.title("ChatBot")
        master.geometry("400x300")

        self.input_label = tk.Label(master, text="You:")
        self.input_label.pack()

        self.input_entry = tk.Entry(master, width=40)
        self.input_entry.pack()

        self.send_button = tk.Button(master, text="Send", command=self.send_message)
        self.send_button.pack()

        self.response_label = tk.Label(master, text="ChatBot:")
        self.response_label.pack()

        self.response_text = tk.Text(master, width=40, height=10)
        self.response_text.pack()

    def send_message(self):
        user_input = self.input_entry.get()
        response = self.process_input(user_input)
        self.response_text.insert(tk.END, "ChatBot: " + response + "\n")
        self.input_entry.delete(0, tk.END)

    def process_input(self, input_text):
        # Process the input text using spaCy
        doc = nlp(input_text)

        # Extract the entities from the input text
        entities = [entity.text for entity in doc.ents]

        # Check if the input text matches a response
        for key in responses:
            if key in input_text.lower():
                return responses[key]

        # If no match, return a default response
        return "I didn't understand that. Can you please rephrase?"

root = tk.Tk()
my_gui = ChatBotGUI(root)
root.mainloop()
